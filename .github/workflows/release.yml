name: Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release (e.g., v1.0.0)'
        required: true

jobs:
  build-executables:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            artifact_name: takeout-rebuilder-linux
            asset_name: takeout-rebuilder-linux
          - os: macos-latest
            artifact_name: takeout-rebuilder-macos
            asset_name: takeout-rebuilder-macos
          - os: windows-latest
            artifact_name: takeout-rebuilder-windows.exe
            asset_name: takeout-rebuilder-windows.exe
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pyinstaller
    
    - name: Build executable with PyInstaller
      run: |
        pyinstaller --onefile --noconsole --name ${{ matrix.artifact_name }} main.py
    
    - name: Test executable
      run: |
        if [ "${{ matrix.os }}" == "windows-latest" ]; then
          ./dist/${{ matrix.artifact_name }} --help || true
        else
          ./dist/${{ matrix.artifact_name }} --help || true
        fi
      shell: bash
    
    - name: Upload artifacts
      uses: actions/upload-artifact@v3
      with:
        name: ${{ matrix.artifact_name }}
        path: dist/${{ matrix.artifact_name }}

  create-release:
    needs: build-executables
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Download artifacts
      uses: actions/download-artifact@v3
      with:
        path: ./artifacts
    
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        body: |
          ## Changes in this Release
          
          ### Features
          - Google Drive Takeout reconstruction
          - Web-based GUI interface
          - Command-line interface
          - Cross-platform support
          
          ### Downloads
          - **Windows**: `takeout-rebuilder-windows.exe`
          - **macOS**: `takeout-rebuilder-macos`
          - **Linux**: `takeout-rebuilder-linux`
          
          ### Installation
          1. Download the executable for your platform
          2. Make it executable (macOS/Linux): `chmod +x takeout-rebuilder-*`
          3. Run the application
          
          See README for detailed instructions.
        draft: false
        prerelease: false
    
    - name: Upload Release Asset - Linux
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./artifacts/takeout-rebuilder-linux/takeout-rebuilder-linux
        asset_name: takeout-rebuilder-linux
        asset_content_type: application/octet-stream
    
    - name: Upload Release Asset - macOS
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./artifacts/takeout-rebuilder-macos/takeout-rebuilder-macos
        asset_name: takeout-rebuilder-macos
        asset_content_type: application/octet-stream
    
    - name: Upload Release Asset - Windows
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./artifacts/takeout-rebuilder-windows.exe/takeout-rebuilder-windows.exe
        asset_name: takeout-rebuilder-windows.exe
        asset_content_type: application/octet-stream