[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "gdrive-takeout-rebuilder"
version = "1.0.0"
description = "Reconstruct Google Drive folder structure from Google Takeout files"
readme = "README.md"
authors = [
    {name = "Nicholas Johnson", email = "noreply@example.com"}
]
license = {file = "LICENSE"}
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: End Users/Desktop",
    "Topic :: System :: Archiving",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Operating System :: OS Independent",
]
keywords = ["google-drive", "takeout", "backup", "reconstruction", "archive"]
requires-python = ">=3.9"
dependencies = [
    "tqdm>=4.65.0",
    "rich>=13.7.0",
    "psutil>=5.9.5",
    "colorama>=0.4.6",
    "fastapi>=0.104.0",
    "uvicorn>=0.24.0",
    "jinja2>=3.1.2",
    "python-multipart>=0.0.6",
    "send2trash>=1.8.2",
    "pydantic>=2.0.0",
    "typing-extensions>=4.0.0",
    "pyyaml>=6.0.1",
    "python-dotenv>=1.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "pytest-asyncio>=0.21.0",
    "black>=23.0.0",
    "ruff>=0.1.0",
    "mypy>=1.0.0",
    "pre-commit>=3.0.0",
]
build = [
    "pyinstaller>=5.0.0",
    "briefcase>=0.3.0",
]

[project.urls]
Homepage = "https://github.com/NicholasJohnson9149/gDrive-consaldator"
Documentation = "https://github.com/NicholasJohnson9149/gDrive-consaldator/wiki"
Repository = "https://github.com/NicholasJohnson9149/gDrive-consaldator.git"
"Bug Tracker" = "https://github.com/NicholasJohnson9149/gDrive-consaldator/issues"

[project.scripts]
takeout-rebuilder = "app.cli:main"
takeout-rebuilder-gui = "main:main"

[tool.setuptools.packages.find]
include = ["app*", "utils*"]
exclude = ["tests*", "docs*", "scripts*"]

[tool.pytest.ini_options]
minversion = "6.0"
addopts = [
    "-ra",
    "--strict-markers",
    "--strict-config",
    "--cov=app",
    "--cov-report=term-missing",
    "--cov-report=html:htmlcov",
]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.black]
line-length = 100
target-version = ['py39', 'py310', 'py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  | gdrive_env
  | .git
  | .github
  | __pycache__
  | .pytest_cache
  | .mypy_cache
  | .ruff_cache
  | htmlcov
  | dist
  | build
)/
'''

[tool.ruff]
line-length = 100
target-version = "py39"
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long (handled by black)
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
    "W191",  # indentation contains tabs
]
exclude = [
    ".git",
    "__pycache__",
    "gdrive_env",
    "dist",
    "build",
    ".pytest_cache",
    ".mypy_cache",
    ".ruff_cache",
]

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
disallow_any_generics = false
ignore_missing_imports = true
exclude = [
    "gdrive_env/",
    "tests/",
    "dist/",
    "build/",
]

[tool.coverage.run]
source = ["app"]
omit = [
    "*/tests/*",
    "*/test_*.py",
    "*/__pycache__/*",
    "*/gdrive_env/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]